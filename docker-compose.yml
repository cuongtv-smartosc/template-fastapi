x-logging: &default-logging
  driver: loki
  options:
    loki-url: 'http://localhost:3100/api/prom/push'
    loki-pipeline-stages: |
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2}'
          max_wait_time: 3s
      - regex:
          expression: '^(?P<time>\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2},d{3}) (?P<message>(?s:.*))$$'

version: '3.9'

services:
  mysql_db:
    image: mysql:latest
    container_name: mysql_db
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --sql_mode=
    restart: on-failure
    environment:
      - MYSQL_DATABASE=EV
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_INITDB_SKIP_TZINFO=1
    expose:
      - "3306"
    ports:
      - '3306:3306'
    volumes:
      - mysql_db:/var/lib/mysql

  fastapi-docker:
    container_name: fastapi-docker
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      - mysql_db
    restart: always
    logging: *default-logging

  loki:
    image: grafana/loki:2.6.1
    container_name: loki
    volumes:
      - ./etc/loki/loki-config.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    expose:
      - 3100

  prometheus:
    image: prom/prometheus:v2.39.1
    ports:
      - "9090:9090"
    expose:
      - 9090
    volumes:
      - ./etc/prometheus:/workspace
    command:
      - --config.file=/workspace/prometheus.yml
      - --enable-feature=exemplar-storage
    depends_on:
      - loki
    logging: *default-logging

  tempo:
    image: grafana/tempo:1.5.0
    command: [ "--target=all", "--storage.trace.backend=local", "--storage.trace.local.path=/var/tempo", "--auth.enabled=false" ]
    ports:
      - "14250:14250"
    depends_on:
      - loki
    logging: *default-logging

  nodeexporter:
    image: prom/node-exporter:v1.3.1
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.45.0
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro #doesn't work on macOS only for Linux
    restart: unless-stopped
    expose:
      - 8080

  grafana:
    image: grafana/grafana:9.1.7
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./etc/grafana/:/etc/grafana/provisioning/datasources
      - ./etc/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./etc/dashboards:/etc/grafana/dashboards
    depends_on:
      - loki
      - prometheus
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
    logging: *default-logging

  pushgateway:
    image: prom/pushgateway:v1.4.3
    container_name: pushgateway
    restart: unless-stopped
    expose:
      - 9091

volumes:
  mysql_db:
  fastapi-docker:
  grafana_data: { }
#  redis:
#  postgres_db:


#  postgres_db:
#    container_name: postgres_container
#    image: postgres:latest
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
#      PGDATA: /data/postgres
#    volumes:
#      - postgres_db:/data/postgres
#    ports:
#      - "5432:5432"
#    restart: on-failure
#  redis:
#    container_name: redis
#    hostname: redis
#    image: redis:latest
#    command: --port 6379
#    ports:
#      - "6379:6379"
#    expose:
#      - "6379"
#    restart: on-failure